{"version":3,"sources":["webpack:///./src/pages/snake.js"],"names":["StyledMainContainer","styled","main","theme","mixins","flexCenter","StyledContent","div","SnakePage","useState","isMounted","setIsMounted","useEffect","timeout","setTimeout","navDelay","clearTimeout","id","isHome","component","classNames","className"],"mappings":"6FAAA,wGAQMA,EAAsBC,IAAOC,KAAV,6EAAGD,CAAH,gCACrB,qBAAGE,MAAkBC,OAAOC,cAI1BC,EAAgBL,IAAOM,IAAV,uEAAGN,CAAH,0DAqDJO,UA/CG,WAAO,IAAD,EACYC,oBAAS,GAApCC,EADe,KACJC,EADI,KAGCF,oBADR,GAFO,GAWtB,OALAG,qBAAU,WACR,IAAMC,EAAUC,YAAW,kBAAMH,GAAa,KAAOI,KACrD,OAAO,kBAAMC,aAAaH,MACzB,IAGD,oCACE,kBAAC,IAAD,MACA,yBAAKI,GAAG,QACN,kBAAC,IAAD,CAAed,MAAOA,KACpB,kBAAC,IAAD,MAIE,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAMY,QAnBH,IAoBH,kBAAC,IAAD,CAAQA,QApBL,IAqBH,kBAAC,IAAD,CAAOA,QArBJ,IAsBH,yBAAKD,GAAG,WACN,kBAAC,IAAD,CAAiBE,UAAW,MACzBT,GACC,kBAAC,IAAD,CAAeG,QAAS,IAAKO,WAAW,UACtC,kBAACpB,EAAD,CAAqBqB,UAAU,cAC7B,kBAAC,IAAD","file":"component---src-pages-snake-js-c8c036a428ad8c0472d6.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Head, Loader, Snake, Social, Logo, Email } from '@components';\nimport { navDelay } from '@utils';\nimport { GlobalStyle, theme } from '@styles';\n\nconst StyledMainContainer = styled.main`\n  ${({ theme }) => theme.mixins.flexCenter};\n  flex-direction: column;\n`;\n\nconst StyledContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nconst SnakePage = () => {\n  const [isMounted, setIsMounted] = useState(false);\n  const isHome = true;\n  const [setIsLoading] = useState(isHome);\n  const [isLoading] = [false];\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setIsMounted(true), navDelay);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <>\n      <Head />\n      <div id=\"root\">\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          {isLoading && isHome ? (\n            <Loader finishLoading={() => setIsLoading(false)} />\n          ) : (\n            <StyledContent>\n              <Logo isHome={isHome} />\n              <Social isHome={isHome} />\n              <Email isHome={isHome} />\n              <div id=\"content\">\n                <TransitionGroup component={null}>\n                  {isMounted && (\n                    <CSSTransition timeout={500} classNames=\"fadeup\">\n                      <StyledMainContainer className=\"fillHeight\">\n                        <Snake />\n                      </StyledMainContainer>\n                    </CSSTransition>\n                  )}\n                </TransitionGroup>\n              </div>\n            </StyledContent>\n          )}\n        </ThemeProvider>\n      </div>\n    </>\n  );\n};\n\nSnakePage.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default SnakePage;\n"],"sourceRoot":""}